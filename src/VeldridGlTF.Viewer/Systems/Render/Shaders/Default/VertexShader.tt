<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#version 450

layout(set = 0, binding = 0) uniform EnvironmentProperties
{
    mat4 View;
    mat4 Projection;
	vec3 CameraPos;
};

layout(set = 2, binding = 0) uniform WorldBuffer
{
    mat4 World;
};

<#
	for (int location=0; location<Context.VertexElements.Count; ++location)
	{
		WriteLine(string.Format("layout(location = {0}) in {1} {2};", location, Glsl.NameOf(Context.VertexElements[location].Format), Context.VertexElements[location].Name));
	}
#>
<#
	for (int location=0; location<Context.Varyings.Count; ++location)
	{
		WriteLine(string.Format("layout(location = {0}) out {1} {2};", Context.Varyings[location].Location, Glsl.NameOf(Context.Varyings[location].Format), Context.Varyings[location].Name));
	}
#>

void main()
{
    vec4 worldPosition = World * vec4(POSITION, 1);
	<#= Context.WorldPosition #> = worldPosition.xyz;
	<#= Context.CameraPosition #> = CameraPos;
    vec4 viewPosition = View * worldPosition;
	mat3 normalMatix = mat3(World);
    vec4 clipPosition = Projection * viewPosition;
    gl_Position = clipPosition;
<#
	if (Context.Normal != null)
	{
		WriteLine(string.Format("{0} = normalize(normalMatix * NORMAL);", Context.Normal.Name));
	}
	if (Context.TBN != null)
	{
		WriteLine("vec4 tangent = TANGENT;");
		WriteLine("vec3 normalW = normalize(normalMatix * NORMAL);");
		WriteLine("vec3 tangentW = normalize(normalMatix * TANGENT.xyz);");
		WriteLine("vec3 bitangentW = cross(normalW, tangentW) * TANGENT.w;");
		WriteLine(string.Format("{0} = mat3(tangentW, bitangentW, normalW);", Context.TBN.Name));
	}
	if (Context.TexCoord0 != null)
	{
		WriteLine(string.Format("{0} = TEXCOORD_0;", Context.TexCoord0.Name));
	}
	if (Context.TexCoord1 != null)
	{
		WriteLine(string.Format("{0} = TEXCOORD_1;", Context.TexCoord1.Name));
	}
#>
}