<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#version 450

struct MaterialPropertiesInfo
{
    vec4 BaseColor;
};


<#
    if (ShaderKey.IsFlagSet(ShaderFlag.DiffuseMap))
	{
#>
layout(location = 0) in vec2 fsin_texCoords;
layout(set = 1, binding = 1) uniform texture2D SurfaceTexture;
layout(set = 1, binding = 2) uniform sampler SurfaceSampler;
<#
	}
#>
layout(location = 1) in vec3 fsin_normal;
layout(location = 0) out vec4 fsout_color;

layout(set = 1, binding = 3) uniform MaterialProperties
{
    MaterialPropertiesInfo _MaterialProperties;
};

void main()
{
    float light = normalize(fsin_normal).y*0.5+0.5;
<#
    if (ShaderKey.IsFlagSet(ShaderFlag.DiffuseMap))
	{
#>
    fsout_color = texture(sampler2D(SurfaceTexture, SurfaceSampler), fsin_texCoords) * vec4(light,light,light,light);
<#
	}
	else
	{
#>
    fsout_color = _MaterialProperties.BaseColor * vec4(light,light,light,light);
<#
	}
#>
	
}